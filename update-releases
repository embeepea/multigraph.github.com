#! /usr/bin/perl

sub message {
    my $msg = shift;
    printf("###\n###  %s\n###\n", $msg);
}

sub sys {
    my $cmd = shift;
#   print "$cmd\n";
    return system($cmd);
}

sub write_release_notes_file {
    my $release_number = shift;
    my $infile = shift;
    my $outfile = shift;
    open(OUT, ">$outfile");
    print OUT <<EOF
---
siteroot: ..
layout: master
menu-download: selected
title: Multigraph - Release Notes for version $release_number
---
Release Notes
=============

EOF
;
    open(IN, "<$infile");
    while (my $line = <IN>) {
        print OUT $line;
    }
    close(IN);
    close(OUT);
}

#
# make sure js-multigraph repo in lib/js-multigraph has latest commits
#
message("updating lib/js-multigraph with the latest commits");
sys("(cd lib/js-multigraph ; git checkout master; git pull )");

#
# build list of release tags by running ./lib/js-multigraph/tags script
#
message("building list of release tags");
@releases = ();
open(TAGS, "(cd lib/js-multigraph ; ./tags) |");
while (chomp(my $line = <TAGS>)) {
    if ( ($tag, $date) = ($line =~ m|\s*(\S+)\s+(.*)$|) ) {
        push(@releases, { 'tag' => $tag, 'date' => $date });
    }
}
close(TAGS);

#
# sort releases in reverse cronological order
#
@releases = sort { $b->{date} cmp $a->{date} } @releases;


#
# copy built js files, and ReleaseNotes files, for each release, from js-multigraph to downloads
#
message("copying js and ReleaseNotes files for releases from lib/js-multigraph to downloads directory");
foreach my $release (@releases) {
    $release_tag    = $release->{tag};
    $release_date   = $release->{date};
    $release_number = $release_tag;
    $release_number =~ s/^v//;

    printf("  release $release_tag:\n");

    sys("(cd lib/js-multigraph ; git checkout $release_tag) > /dev/null 2>&1");

    if (-f "lib/js-multigraph/build/multigraph.js") {
        printf("    lib/js-multigraph/build/multigraph.js      => ./download/multigraph-${release_number}.js\n");
        sys("cp lib/js-multigraph/build/multigraph.js ./download/multigraph-${release_number}.js");
    } else {
        printf("    WARNING: lib/js-multigraph/build/multigraph.js not found for this release\n");
    }
    if (-f "lib/js-multigraph/build/multigraph-min.js") {
        printf("    lib/js-multigraph/build/multigraph-min.js  => ./download/multigraph-min-${release_number}.js\n");
        sys("cp lib/js-multigraph/build/multigraph-min.js ./download/multigraph-min-${release_number}.js");
    } else {
        printf("    WARNING: lib/js-multigraph/build/multigraph-min.js not found for this release\n");
    }
    if (-f "lib/js-multigraph/ReleaseNotes.md") {
        printf("    lib/js-multigraph/ReleaseNotes.md  => ./download/ReleaseNotes-${release_number}.md\n");
        write_release_notes_file($release_number,
                                 "lib/js-multigraph/ReleaseNotes.md",
                                 "./download/ReleaseNotes-${release_number}.md");
    } else {
        printf("    WARNING: lib/js-multigraph/ReleaseNotes.md not found for this release\n");
    }
}

#
# make copies of most recent release files as multigraph.js, multigraph-min.js
#
message("creating copies of $latest_release_tag files as multigraph.js, multigraph-min.js, ReleaseNotes.md");
$latest_release_date   = $releases[0]->{date};
$latest_release_tag    = $releases[0]->{tag};
$latest_release_number = $latest_release_tag;
$latest_release_number =~ s/^v//;
sys("cp ./download/multigraph-${latest_release_number}.js ./download/multigraph.js");
sys("cp ./download/multigraph-min-${latest_release_number}.js ./download/multigraph-min.js");

#
# leave the lib/js-multigraph repo with the latest tag checked out
#
message("registering submodule lib/js-multigraph to be positioned at $latest_release_tag");
sys("(cd lib/js-multigraph ; git checkout $latests_release_tag) > /dev/null 2>&1");
sys("git submodule update --recursive");

#
# build the example pages for this release
#
message("building mugl example pages");
sys("./build-examples");

#
# copy the mugl-schema xsd file into place
#
message("copying lib/js-multigraph/mugl-schema/mugl.xsd");
sys("cp lib/js-multigraph/mugl-schema/mugl.xsd _includes");

#
# write latest release number and date to _include files
#
message("writing release-related files");
open(OUT, ">_includes/latest-release-date.txt");
print OUT $latest_release_date;
close(OUT);

open(OUT, ">_includes/latest-release-version.txt");
print OUT $latest_release_number;
close(OUT);

open(OUT, ">_includes/release-table.html");
print OUT <<EOF
<table class="release-table">
<tr>
<th>Version</th>
<th>Date Released</th>
<th>Release Notes</th>
<th>JavaScript File</th>
<th>Compressed JavaScript File</th>
</tr>
<tr>
  <td class="value">$latest_release_number</td>
  <td class="value">$latest_release_date</td>
  <td class="value"><a href="ReleaseNotes-${latest_release_number}.html">Read</a></td>
  <td class="value"><a href="multigraph.js">multigraph.js</a></td>
  <td class="value"><a href="multigraph-min.js">multigraph-min.js</a></td>
</tr>
EOF
    ;
foreach $release (@releases) {
    $release_tag    = $release->{tag};
    $release_date   = $release->{date};
    $release_number = $release_tag;
    $release_number =~ s/^v//;
    $multigraph_js = "multigraph-${release_number}.js";
    if (-f "download/$multigraph_js") {
        $multigraph_js = "<a href=\"$multigraph_js\">$multigraph_js</a>";
    } else {    
        $multigraph_js = "MISSING";
    }
    $multigraph_min_js = "multigraph-min-${release_number}.js";
    if (-f "download/$multigraph_min_js") {
        $multigraph_min_js = "<a href=\"$multigraph_min_js\">$multigraph_min_js</a>";
    } else {    
        $multigraph_min_js = "MISSING";
    }
    $release_notes = "ReleaseNotes-${release_number}.md";
    if (-f "download/$release_notes") {
        $release_notes = "<a href=\"ReleaseNotes-${release_number}.html\">Read</a>";
    } else {    
        $release_notes = "MISSING";
    }
    print OUT <<EOF
<tr>
  <td class="value">$release_number</td>
  <td class="value">$release_date</td>
  <td class="value">$release_notes</td>
  <td class="value">$multigraph_js</td>
  <td class="value">$multigraph_min_js</td>
</tr>
EOF
;}
print OUT "</table>\n";
close(OUT);
