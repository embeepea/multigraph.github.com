#! /usr/bin/perl

foreach $value (
'INTEGER',
'INTEGER',
'INTEGER(2)',
'COLOR!(black)',
'INTEGER(2)',
'INTEGER(5)',
'BOOLEAN',
'POINT(1,1)',
'POINT(1,1)',
'POINT(0,0)',
'FRAME(padding)',
'COLOR(white)',
'DOUBLE(1.0)',
'INTEGER(1)',
'COLOR(black)',
'INTEGER',
'INTEGER',
'INTEGER(0)',
'INTEGER(0)',
'INTEGER(40)',
'INTEGER(30)',
'INTEGER(1)',
'COLOR(white)',
'STRING',
'POINT(-1 -1)',
'POINT(-1 -1)',
'POINT(0 0)',
'FRAME(padding)',
'INTEGER(35)',
'INTEGER(38)',
'INTEGER(10)',
'INTEGER(35)',
'INTEGER(0)',
'COLOR(0xeeeeee)',
'COLOR',
'POINT(0 1)',
'POINT(0 1)',
'POINT(0 0)',
'FRAME(padding)',
'COLOR(white)',
'DOUBLE(1.0)',
'INTEGER(0)',
'COLOR(black)',
'INTEGER(0)',
'INTEGER(15)',
'INTEGER',
'STRING',
'DATATYPE(number)',
'DISPLACEMENT(1.0)',
'POINT(-1,1)',
'DOUBLE(-1)',
'POINT(0,0)',
'DATAVALUEORAUTO(auto)',
'DATAVALUEORAUTO(auto)',
'DISPLACEMENT(-1.0)',
'DISPLACEMENT(1.0)',
'COLOR(black)',
'INTEGER(1)',
'INTEGER(-3)',
'INTEGER(3)',
'COLOR(black)',
'STRING',
'DATAVALUE(0)',
'DOUBLE(0)',
'POINT',
'POINT',
'COLOR(black)',
'STRING',
'DOUBLE(1.0)',
'STRING',
'STRING',
'DOUBLE',
'POINT',
'POINT',
'STRING',
'DOUBLE',
'DOUBLE(0)',
'POINT',
'POINT',
'DOUBLE(0)',
'COLOR(0xeeeeee)',
'BOOLEAN(false)',
'BOOLEAN(yes)',
'DATAVALUE',
'DATAVALUE',
'BOOLEAN(yes)',
'DATAMEASURE',
'DATAMEASURE',
'DATAVALUE',
'STRING',
'DATAVALUE',
'DATAVALUE',
'BOOLEAN',
'STRING',
'STRING',
'xsd:string REQUIRED',
'STRING',
'xsd:string REQUIRED',
'DATAVALUE',
'RENDERERTYPE',
'STRING',
'STRING',
'DATAVALUE',
'DATAVALUE',
'STRING',
'COLOR',
'DOUBLE',
'INTEGER',
'COLOR',
'INTEGER',
'xsd:string'
) {

    if ( ($type,$bang,$default) = ($value =~ m|^\s*([^\(!]+)\s*(!?)\s*(\([^\(]*\))?\s*$|) ) {
        printf("%s\n", $bang);
    }

}
