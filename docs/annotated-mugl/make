#! /usr/bin/perl

sub escape {
    my $s = shift;
    $s =~ s/</&lt;/g;
    $s =~ s/>/&gt;/g;
    return $s;
}

print qq!---
siteroot: ../../..
layout: master
menu-documentation: selected
title: Multigraph - Annotated MUGL
headers: |
  <script type="text/javascript" src="jquery.tooltip.min.js"></script>
  <script type="text/javascript" src="annotated-mugl.js"></script>
  <link rel="stylesheet" href="annotated-mugl.css"></link>  
---

<h1>Annotated MUGL File</h2>

Click on an element to expand and see documentation for it.

<div class="highlight"><pre><code class="xml">
!
    ;

open(IN, "<annotated-mugl.xml");
my $in_comment = 0;
my $in_bang_comment = 0;
my %types = ();
my $current_type = "";
my $tooltip_count = 0;
while (chomp($line = <IN>)) {
    if ($in_bang_comment) {
        if ( ($indent, $comment) = ($line =~ m|^(\s*)(\S*-->)\s*$|) ) {
            # close bang comment
            $in_bang_comment = 0;
            $current_type = "";
        } else {
            # bang comment line
            $line =~ s|^\s*!\s+||;
            if ( ($type) = ($line =~ m|^type:\s*(\S+)|) ) {
                $current_type = $type;
                $types{$current_type} .= "";
            } elsif ($line =~ m|\S|) {
                if ($current_type) {
                    if ($types{$current_type} ne "") {
                        $types{$current_type} .= " ";
                    }
                    $types{$current_type} .= $line;
                }
            } else {
                $current_type = "";
            }
        }
        next;
    }
    if ($in_comment) {
        if ( ($indent, $comment) = ($line =~ m|^(\s*)(\S*-->)\s*$|) ) {
            # close comment
            printf("<span class=\"c\">%s%s</span>\n", $indent, escape($comment));
            $in_comment = 0;
        } else {
            # comment line
            printf("<span class=\"c\">%s</span>\n", escape($line));
        }
        next;
    }

    if ( ($indent, $comment) = ($line =~ m|^(\s*)(<!--!.*)$|) ) {
        # open bang comment
        $in_bang_comment = 1;
    } elsif ( ($indent, $comment) = ($line =~ m|^(\s*)(<!--.*)$|) ) {
        # open comment
        printf("<span class=\"c\">%s%s</span>\n", $indent, escape($comment));
        $in_comment = 1;
    } elsif ( ($indent, $tag) = ($line =~ m|^(\s*)<([^\s>]+)\s*$|) ) {
        # open tag of the form "<tag"
        printf("<span class=\"element\"><span class=\"collapsed\">%s<span class=\"target\"><span class=\"tagprefix\">+</span><span class=\"nt\">&lt;%s.../&gt;</span></span></span>",
               $indent,
               $tag);
        printf("<span class=\"expanded\">%s<span class=\"target\"><span class=\"tagprefix\">-</span><span class=\"nt\">&lt;%s</span></span>\n",
               $indent,
               $tag);
    } elsif ( ($indent, $tag) = ($line =~ m|^(\s*)</([^\s>]+)>\s*$|) ) {
        # close tag
        if ($tag eq "mugl") {
            printf("%s<span class=\"nt\">&lt;/%s&gt;</span>\n",
                   $indent,
                   $tag);
        } else {
            printf("$indent<span class=\"tagprefix\"></span><span class=\"nt\">&lt;/%s&gt;</span></span></span>\n",
                   $tag);
        }
    } elsif ( ($indent, $tag) = ($line =~ m|^(\s*)<([^\s>]+)>\s*$|) ) {
        # open tag of the form "<tag>"
        if ($tag eq "mugl") {
            printf("%s<span class=\"nt\">&lt;%s&gt;</span>\n",
                   $indent,
                   $tag);
        } else {
            printf("<span class=\"element\"><span class=\"collapsed\">%s<span class=\"target\"><span class=\"tagprefix\">+</span><span class=\"nt\">&lt;%s.../&gt;</span></span></span>",
                   $indent,
                   $tag);
            printf("<span class=\"expanded\">%s<span class=\"target\"><span class=\"tagprefix\">-</span><span class=\"nt\">&lt;%s&gt;</span></span>\n",
                   $indent,
                   $tag);
        }
    } elsif ( ($indent,$name,$value,$suffix) = ($line =~ m|^(\s*)([a-z0-9_-]+)\s*=\s*"([^\"]*)"(.*)$|i) ) {
        $tooltip_id = sprintf("type-tooltip-%1d", ++$tooltip_count);
        printf("%s<span class=\"na\">%s=</span><span class=\"s\">&quot;<span class=\"tipped-type\" id=\"%s\">%s</span>&quot;</span>%s\n",
               $indent,
               $name,
               $tooltip_id,
               $value,
               $suffix);
        print tooltip_script($tooltip_id, $value);
    } else {
        $line = escape($line);
        print "$line\n";
    }

}
close(IN);

print <<EOF
</code></pre></div>
EOF
    ;

sub tooltip_script {
    my $id    = shift;
    my $value = shift;
    my $bang,$type,$default;
    my @lines = ();
    if ( ($type,$bang,$default) = ($value =~ m|^\s*([^\(!]+)\s*(!?)\s*(\([^\(]*\))?\s*$|) ) {
        push(@lines, "<p>$type value</p>");
        push(@lines, "<p>" . $types{$type} . "</p>");
        if ($bang eq "!") {
            push(@lines, "<p>This attribute is required.</p>");
        } elsif ($default ne "") {
            $default =~ s|^\(||;  $default =~ s|\)$||;  # strip parens from $default value
            push(@lines, "<p>This attribute is optional; the default value is \"$default\".</p>");
        } else {
            push(@lines, "<p>This attribute is optional.</p>");
        }
    }
    if (!@lines) {
        push(@lines, "$value");
        push(@lines, "<br/>");
        push(@lines, "Unknown details for this type");
    }
    my $lines = join("", @lines);
    my $script = qq|<script type="text/javascript">
  \$('document').ready(function() {
    \$('#$id').tooltip({
      track: true,
      showURL: false,
      opacity: 1.0,
      left: 25,
      top: -50,
      bodyHandler : function() {
          return \$('<div class="tooltip">$lines</div>');
      }
    });
  });
</script>|;
    return $script;
}
